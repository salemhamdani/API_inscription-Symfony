<?php

namespace App\Repository;

/**
 * BlogRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class BlogRepository extends \Doctrine\ORM\EntityRepository
{
	  public function findByArchive($etat)
    {
        return $this->findBy(array('archive' => $etat),array('title' => 'ASC'));

    }

        public function getRang()
    {
        $queryBuilder = $this->createQueryBuilder('f');
        $queryBuilder->select($queryBuilder->expr()->max('f.rang'));
        return (int)$queryBuilder->getQuery()->getScalarResult()[0][1] + 1;
    }


  public function getTagByBlog($id)
    {
        $user = $this->createQueryBuilder('u')->join('u.tag', 't')->addSelect('t')->where('u.id = :id');
        $tasks = $user->getTags();
        return $tasks;
    }

 

 public function findByType($type, $nbr)
{
    $qb = $this->createQueryBuilder('article');
    $qb->join('article.type', 'type')
            ->addSelect('type')
            ->where('type.code = :code')
            ->setParameter('code', $type)
        ->setMaxResults($nbr)
        ->orderBy('article.id', 'DESC');

    return $qb->getQuery()->getResult();
}

 public function getarticlesByCategory($id, $category, $limit)
{
    $qb = $this->createQueryBuilder('article');
    $qb->where('article.id != :identifier')
        ->Andwhere('article.category = :category')
        ->setParameter('category', $category)
        ->setParameter('identifier', $id)
        ->setMaxResults($limit)
        ->orderBy('article.id', 'DESC');

    return $qb->getQuery()->getResult();
}
    
    

    
}
