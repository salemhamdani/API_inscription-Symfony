<?php

namespace App\Repository;
use Doctrine\ORM\EntityRepository;

/**
 * listelgRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class MasterlistelgRepository extends EntityRepository
{
	
		public function findByformationtype(){

		$qb = $this
			->createQueryBuilder('m')
                        ->select('f')
                        ->from('NoyauBundle:Masterlistelg', 'f')
                        ->where('f.designation like :_F')
                        ->andwhere('f.designation like :_C')
                        ->setParameter('_F', '%' . 'formation' . '%')
                        ->setParameter('_C', '%' . 'continue' . '%')
                        ->setMaxResults(1);
		return $qb->getQuery()->getOneOrNullResult();
	}


	// pour formType
		public function findByModule($module){

		$qb = $this
			->createQueryBuilder('m')
            ->join('m.masterliste', 'l')
            ->addSelect('l')
            ->where('l.module=:module')
            ->setParameters(array(':module'=>$module));
		return $qb->getQuery()->getResult();
	}
	// pour formType
	public function getByListeCode($module,$code){

		$qb = $this
			->createQueryBuilder('m')
            ->join('m.masterliste', 'l')
            ->addSelect('l')
            ->where('l.code = :code and l.module=:module')
            ->setParameters(array(':code'=> $code,':module'=>$module))
			->orderBy('m.code');
		return $qb;
	} 
	// pour formType Devis
	public function getByListeCodeDevis($module,$code){

		$qb = $this
			->createQueryBuilder('m')
            ->join('m.masterliste', 'l')
            ->addSelect('l')
            ->where('l.code = :code and l.module=:module')
            ->Andwhere('m.code in (:codedevis)')
            ->setParameters(array(':code'=> $code,':module'=>$module,':codedevis'=>  array('accord','cree','rejete' )))
			->orderBy('m.code');
		return $qb;
	}

	// pour formType
	public function getByListeCodeValeur($module,$code,$valeur){

		$qb = $this
			->createQueryBuilder('m')
            ->join('m.masterliste', 'l')
            ->addSelect('l')
            ->where('l.code = :code and l.module=:module and m.valeur=:valeur')
            ->setParameters(array(':code'=> $code,':module'=>$module,':valeur'=>$valeur))
			->orderBy('m.code');
		return $qb;
	}

	public function getByListeCodeOPCA(){

		$qb = $this
			->createQueryBuilder('m')
            ->join('m.masterliste', 'l')
            ->addSelect('l')
            ->where('l.code = :code and l.module=:module')
            ->AndWhere('m.valeur is NULL ')
            ->setParameters(array(':code'=> 'LISTEFINANCEMENT',':module'=>'APIPOLEEMPLOI'))
			->orderBy('m.valeur2');
		return $qb;
	}

	public function getByListeCodeFinanceur(){
		$codes=array('FSESORTIE','FSEENTREE','FSEBSS');
		$qb = $this
			->createQueryBuilder('m')
            ->join('m.masterliste', 'l')
            ->addSelect('l')
            ->where('l.code in (:codes) and l.module=:module')
            ->setParameters(array(':codes'=> $codes,':module'=>'CURSUS'))
			->orderBy('m.code');
		return $qb;
	}

	public function getByListeCategoryQuestionFinanceur(){
		$codes=array('FSEBSS','CONCLUSIONSOFTSKILL');
		$qb = $this
			->createQueryBuilder('m')
            ->join('m.masterliste', 'l')
            ->addSelect('l')
            ->where('l.code in (:codes) and l.module=:module')
            ->setParameters(array(':codes'=> $codes,':module'=>'CURSUS'))
			->orderBy('m.code');
		return $qb;
	}


	public function getOneByListeCode($module,$codemaster,$codelg){

		$qb = $this
			->createQueryBuilder('m')
            ->join('m.masterliste', 'l')
            ->addSelect('l')
            ->where('m.code = :codelg and l.module=:module and l.code=:codemaster')
            ->setParameters(array(':codelg'=> $codelg,':module'=>$module,':codemaster'=>$codemaster))
             ->setMaxResults(1);
		return $qb->getQuery()->getOneOrNullResult();
	}


		public function getOneByModule($module,$codelg){

		$qb = $this
			->createQueryBuilder('m')
            ->join('m.masterliste', 'l')
            ->addSelect('l')
            ->where('m.code = :codelg and l.module=:module')
            ->setParameters(array(':codelg'=> $codelg,':module'=>$module))
            ->setMaxResults(1);
		return $qb->getQuery()->getOneOrNullResult();
	}

	// pour formTypeform
	public function getformOneByListeValeur($module,$codemaster,$valeur){

		$qb = $this
			->createQueryBuilder('m')
            ->join('m.masterliste', 'l')
            ->addSelect('l')
            ->where('m.valeur = :valeur and l.module=:module and l.code=:codemaster')
            ->setParameters(array(':valeur'=> $valeur,':module'=>$module,':codemaster'=>$codemaster));
		return $qb;
	}

	public function getByListeCodeOPCO(){

		$qb = $this
			->createQueryBuilder('m')
            ->join('m.masterliste', 'l')
            ->addSelect('l')
            ->where('l.code = :code and l.module=:module')
            ->AndWhere('m.valeur2 = :opco ')
            ->setParameters(array(':code'=> 'LISTEFINANCEMENT',':module'=>'APIPOLEEMPLOI',':opco'=>'OPCO'))
			->orderBy('m.valeur2');
		return $qb;
	}
	// pour formTypeform
	public function getformOneByListeCode($module,$codemaster,$codelg){

		$qb = $this
			->createQueryBuilder('m')
            ->join('m.masterliste', 'l')
            ->addSelect('l')
            ->where('m.code = :codelg and l.module=:module and l.code=:codemaster')
            ->setParameters(array(':codelg'=> $codelg,':module'=>$module,':codemaster'=>$codemaster));
		return $qb;
	}
	// pour formTypeform
	public function getByListeValeur2($module,$codemaster,$codelg){

		$qb = $this
			->createQueryBuilder('m')
            ->join('m.masterliste', 'l')
            ->addSelect('l')
            ->where(' m.valeur2 = :codelg and l.module=:module and l.code=:codemaster')
            ->setParameters(array(':codelg'=> $codelg,':module'=>$module,':codemaster'=>$codemaster));
		return $qb;
	}

	public function findByListeCode($module,$code){

		$qb = $this
			->createQueryBuilder('m')
            ->join('m.masterliste', 'l')
            ->addSelect('l')
            ->where('l.code = :code and l.module=:module')
            ->setParameters(array(':code'=> $code,':module'=>$module));
		return $qb->getQuery()->getResult();
	}



	public function findOneByListeCode($module,$code){

		$qb = $this
			->createQueryBuilder('m')
            ->join('m.masterliste', 'l')
            ->addSelect('l')
            ->where('l.code = :code and l.module=:module')
            ->setParameters(array(':code'=> $code,':module'=>$module))
            ->setMaxResults(1);
		return $qb->getQuery()->getOneOrNullResult();
	}

	public function findByListeCodeOrder($module,$code){

		$qb = $this
			->createQueryBuilder('m')
            ->join('m.masterliste', 'l')
            ->addSelect('l')
            ->where('l.code = :code and l.module=:module')
            ->setParameters(array(':code'=> $code,':module'=>$module))
			->orderBy('m.valeur2', 'ASC');
		return $qb->getQuery()->getResult();
	}

	public function findByListeCodeMenu($module,$code){

		$qb = $this
			->createQueryBuilder('m')
            ->join('m.masterliste', 'l')
            ->addSelect('l')
            ->where('m.valeur3 = :valeur3 and l.code = :code and l.module=:module')
            ->setParameters(array(':valeur3'=> '1',':code'=> $code,':module'=>$module))
			->orderBy('m.valeur2', 'ASC');
		return $qb->getQuery()->getResult();
	}




	public function findByListeOneCode($module,$codemaster,$codelg){

		$qb = $this
			->createQueryBuilder('m')
            ->join('m.masterliste', 'l')
            ->addSelect('l')
            ->where('m.code = :codelg and l.module=:module and l.code=:codemaster')
            ->setParameters(array(':codelg'=> $codelg,':module'=>$module,':codemaster'=>$codemaster));
		return $qb->getQuery()->getOneOrNullResult();
	}


	public function findOneByListeValeur($module,$codemaster,$codelg){

		$qb = $this
			->createQueryBuilder('m')
            ->join('m.masterliste', 'l')
            ->addSelect('l')
            ->where('m.valeur = :codelg and l.module=:module and l.code=:codemaster')
            ->setParameters(array(':codelg'=> $codelg,':module'=>$module,':codemaster'=>$codemaster));
		return $qb->getQuery()->getOneOrNullResult();
	}

	public function findOneByListeValeurAndValeur2($module,$codemaster,$codelg,$valeur2){

		$qb = $this
			->createQueryBuilder('m')
            ->join('m.masterliste', 'l')
            ->addSelect('l')
            ->where('m.valeur = :codelg and m.valeur2 = :valeur2 and l.module=:module and l.code=:codemaster')
            ->setParameters(array(':codelg'=> $codelg,':module'=>$module,':codemaster'=>$codemaster,':valeur2'=>$valeur2));
		return $qb->getQuery()->getOneOrNullResult();
	}

	public function findOneByListeValeur2($module,$codemaster,$valeur2){

		$qb = $this
			->createQueryBuilder('m')
            ->join('m.masterliste', 'l')
            ->addSelect('l')
            ->where('m.valeur2 = :valeur2 and l.module=:module and l.code=:codemaster')
            ->setParameters(array(':module'=>$module,':codemaster'=>$codemaster,':valeur2'=>$valeur2));
		return $qb->getQuery()->getOneOrNullResult();
	}

	public function findByListeValeur2($module,$codemaster,$codelg){

		$qb = $this
			->createQueryBuilder('m')
            ->join('m.masterliste', 'l')
            ->addSelect('l')
            ->where('m.valeur3 = :valeur3 and m.valeur2 = :codelg and l.module=:module and l.code=:codemaster')
            ->setParameters(array(':valeur3'=> '1',':codelg'=> $codelg,':module'=>$module,':codemaster'=>$codemaster));
		return $qb->getQuery()->getResult();
	}
}
